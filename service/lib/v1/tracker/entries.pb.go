// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/tracker/entries.proto

package tracker

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Time Entries
type Entry struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Begin                *timestamp.Timestamp `protobuf:"bytes,2,opt,name=begin,proto3" json:"begin,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Comment              string               `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	ProjectId            uint64               `protobuf:"varint,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fad75870d957e629, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entry) GetBegin() *timestamp.Timestamp {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *Entry) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Entry) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Entry) GetProjectId() uint64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func init() {
	proto.RegisterType((*Entry)(nil), "traak.v1.tracker.Entry")
}

func init() { proto.RegisterFile("proto/v1/tracker/entries.proto", fileDescriptor_fad75870d957e629) }

var fileDescriptor_fad75870d957e629 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0xf4, 0x30,
	0x10, 0x86, 0x69, 0x77, 0xfb, 0x7d, 0x6c, 0x04, 0x91, 0x9c, 0xc2, 0x82, 0x5a, 0x3c, 0xf5, 0x20,
	0x19, 0xab, 0xff, 0x40, 0xf0, 0xe0, 0xb5, 0x78, 0xf2, 0x22, 0x6d, 0x33, 0x66, 0xc7, 0xdd, 0x24,
	0x25, 0x9d, 0x2d, 0xf8, 0xaf, 0xfc, 0x89, 0x62, 0xba, 0x05, 0x6f, 0x1e, 0x93, 0xf7, 0x99, 0x87,
	0x77, 0x46, 0x5c, 0x0d, 0x31, 0x70, 0x80, 0xa9, 0x06, 0x8e, 0x6d, 0xbf, 0xc7, 0x08, 0xe8, 0x39,
	0x12, 0x8e, 0x3a, 0x05, 0xf2, 0x82, 0x63, 0xdb, 0xee, 0xf5, 0x54, 0xeb, 0x53, 0xbe, 0xbd, 0xb6,
	0x21, 0xd8, 0x03, 0x42, 0xca, 0xbb, 0xe3, 0x3b, 0x30, 0x39, 0x1c, 0xb9, 0x75, 0xc3, 0x3c, 0x72,
	0xf3, 0x95, 0x89, 0xe2, 0xc9, 0x73, 0xfc, 0x94, 0xe7, 0x22, 0x27, 0xa3, 0xb2, 0x32, 0xab, 0xd6,
	0x4d, 0x4e, 0x46, 0xde, 0x89, 0xa2, 0x43, 0x4b, 0x5e, 0xe5, 0x65, 0x56, 0x9d, 0xdd, 0x6f, 0xf5,
	0xac, 0xd2, 0x8b, 0x4a, 0xbf, 0x2c, 0xaa, 0x66, 0x06, 0xe5, 0xad, 0x58, 0xa1, 0x37, 0x6a, 0xf5,
	0x27, 0xff, 0x83, 0x49, 0x25, 0xfe, 0xf7, 0xc1, 0x39, 0xf4, 0xac, 0xd6, 0x65, 0x56, 0x6d, 0x9a,
	0xe5, 0x29, 0x2f, 0x85, 0x18, 0x62, 0xf8, 0xc0, 0x9e, 0xdf, 0xc8, 0xa8, 0x22, 0x35, 0xda, 0x9c,
	0x7e, 0x9e, 0xcd, 0x63, 0xfd, 0x0a, 0x96, 0x78, 0x77, 0xec, 0x74, 0x1f, 0x1c, 0xb8, 0x5d, 0xeb,
	0x3d, 0x59, 0x48, 0xab, 0xc3, 0x88, 0x71, 0xa2, 0x1e, 0xe1, 0x40, 0xdd, 0xaf, 0x33, 0x75, 0xff,
	0x52, 0x89, 0x87, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde, 0xa3, 0x18, 0x6e, 0x41, 0x01, 0x00,
	0x00,
}
